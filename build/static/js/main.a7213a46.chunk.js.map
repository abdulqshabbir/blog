{"version":3,"sources":["services/UserService.js","reducers/user/userReducer.js","components/Signup/Signup.js","components/Login/Login.js","services/BlogServices.js","hooks/useField.js","reducers/notification/notificationReducer.js","components/CreateBlogForm/CreateBlog.js","components/Blog/Blog.js","hooks/useResource.js","reducers/blogs/blogsReducer.js","components/Notification/Notification.js","components/Pages/FrontPage/FrontPage.js","components/Pages/UsersPage/UsersPage.js","components/Pages/UserPage/UserPage.js","components/Pages/BlogPage/BlogShowPage.js","components/NavigationMenu/NavigationMenu.js","App.js","reducers/index.js","store.js","index.js"],"names":["setUserInLocalStorage","user","window","localStorage","setItem","username","token","id","login","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","password","requestOptions","response","wrap","_context","prev","next","headers","Content-Type","axios","post","concat","sent","status","logout","abrupt","data","t0","console","log","stop","_x","_x2","apply","this","arguments","clear","userService","fetchAllUsers","_ref2","_callee2","users","_context2","get","fetchUserById","_ref3","_callee3","_context3","find","u","_x3","initialState","userReducer","state","length","undefined","action","type","Signup","_useState","useState","_useState2","slicedToArray","email","setEmail","_useState3","_useState4","setUsername","_useState5","_useState6","setPassword","_useState7","_useState8","name","setName","react_default","createElement","className","onSubmit","e","preventDefault","target","elements","value","placeholder","onChange","connect","dispatch","attemptToAuthenticateUser","react_router_dom","to","config","BlogServices","createBlog","title","author","url","payload","likes","catch","err","setToken","newToken","Authorization","updateLikes","blogId","numberOfLikes","put","deleteBlog","delete","useField","setValue","event","isVisible","text","notificationReducer","showNotification","hideNotification","formIsVisible","setFormIsVisible","setTimeout","onClick","Blog","blog","isFullBlogVisible","setIsFullBlogVisible","setLikes","key","data-testid","stopPropagation","confirm","useResource","BASE_URL","getAll","res","deleteResource","userToken","resourceId","blogsReducer","blogs","Notification","Message","positive","Header","notification","setBlogs","logoutUser","isLoading","setIsLoading","blogService","useEffect","allBlogs","fetchBlogs","components_Notification_Notification","CreateBlogForm_CreateBlog","sort","blogA","blogB","map","components_Blog_Blog","setUsers","redirect","setRedirect","usersFetched","fetchUsers","react_router","userCurrentlyLoggedIn","match","setUser","fetchedUser","params","fetchUser","uuid","setBlog","findBlogById","handleClick","BlogService","href","activeItem","setActiveItem","Menu","pointing","secondary","Item","active","position","loginUser","authenticatedUser","getItem","getUserFromLocalStorage","components_NavigationMenu_NavigationMenu","exact","path","render","Pages_FrontPage_FrontPage","component","UsersPage","UserPage","BlogShowPage","Login","rootReducer","combineReducers","middleware","applyMiddleware","thunk","logger","store","createStore","ReactDOM","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.a7213a46.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api'\n\nconst setUserInLocalStorage = (user) => {\n    window.localStorage.setItem('username', user.username)\n    window.localStorage.setItem('token', user.token)\n    window.localStorage.setItem('id', user.id)\n}\n\nconst login = async (username, password) => {\n    const requestOptions = {\n        headers: { 'Content-Type': 'application/json' }\n    }\n\n    try {\n        const response = await axios.post(`${baseUrl}/login`, { username, password }, requestOptions)\n\n        if (response.status === 400 || response.status === 401) {\n            logout()\n            return null\n        }\n\n        else {\n            const user = await response.data\n            setUserInLocalStorage(user)\n            return user\n        }\n    } catch (e) {\n        console.log(e)\n    }\n}\n\nconst logout = () => {\n    window.localStorage.clear()\n}\n\nconst fetchAllUsers = async () => {\n    try {\n        const response = await axios.get(`${baseUrl}/users`)\n        if (response.status === 200) {\n            const users = await response.data\n            return users\n        }\n    } catch(e) {\n        console.log(e)\n    }\n}\n\nconst fetchUserById = async (id) => {\n    try {\n        const response = await axios.get(`${baseUrl}/users`)\n        if (response.status === 200) {\n            const users = await response.data\n            const user = users.find(u => u.id === id)\n            if (!user) {\n                return null\n            } else {\n                return user\n            }\n        }\n        return null\n    } catch(e) {\n        console.log(e)\n    }\n}\n\nexport const userService = {\n    login,\n    logout,\n    fetchAllUsers,\n    fetchUserById\n}","import { userService } from './../../services/UserService'\n\n// Action types\nexport const AUTHENTICATE_USER = 'AUTHENTICATE_USER'\nexport const DO_NOT_AUTHENTICATE_USER = 'DO_NOT_AUTHENTICATE_USER'\nexport const LOGOUT_USER = 'LOGOUT_USER'\nexport const LOGIN_USER = 'LOGIN_USER'\n\nexport const attemptToAuthenticateUser = (username, password) => {\n    return async dispatch => {\n        const user = await userService.login(username, password)\n\n        if(!user || user.username === null) {\n            dispatch({ type: DO_NOT_AUTHENTICATE_USER })\n        } else {\n            dispatch({\n                type: LOGIN_USER,\n                username: user.username,\n                token: user.token,\n                id: user.id\n            })\n        }\n    }\n}\n\nexport const loginUser = (username, token, id) => {\n    return {\n        type: LOGIN_USER,\n        username,\n        token,\n        id\n    }\n}\n\nexport const doNotAuthenticateUser = (username, token, id) => {\n    return {\n        type: DO_NOT_AUTHENTICATE_USER,\n        username,\n        token,\n        id\n    }\n}\n\nexport const logoutUser = () => {\n    return {\n        type: LOGOUT_USER\n    }\n}\n\nconst initialState = {\n    username: null,\n    id: null,\n    token: null\n}\n\nconst userReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case LOGIN_USER:\n            return {\n                username: action.username,\n                token: action.token,\n                id: action.id\n            }\n\n        case DO_NOT_AUTHENTICATE_USER:\n            return {\n                username: null,\n                id: null,\n                token: null\n            }\n\n        case LOGOUT_USER:\n            return {\n                username: null,\n                id: null,\n                token: null\n            }\n\n        default:\n            return state\n    }\n}\n\nexport default userReducer\n\n","import React from 'react'\nimport { useState } from 'react'\nimport axios from 'axios'\n\nconst Signup = () => {\n  const [email, setEmail] = useState('')\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [name, setName ] = useState('')\n\n  const clearInputFields = () => {\n    setEmail('')\n    setUsername('')\n    setPassword('')\n    setName('')\n  }\n\n  const handleUserCreation = (e) => {\n    e.preventDefault()\n    const username = e.target.elements.username.value\n    const email = e.target.elements.email.value\n    const password = e.target.elements.password.value\n    const name = e.target.elements.name.value\n\n    clearInputFields()\n\n    axios.post('http://localhost:5000/api/users', { username, password, email, name })\n  }\n  return (\n    <div>\n      <h3>New user? Sign up using this form. </h3>\n      <form className=\"signup form\" onSubmit={handleUserCreation}>\n        <div>\n          Username:\n          < input\n            type=\"text\"\n            name=\"username\"\n            placeholder=\"new username here...\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </div>\n        <div>\n          Password:\n          < input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"new password here...\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n        <div>\n          Email:\n          < input\n            type=\"text\"\n            name=\"email\"\n            placeholder=\"new email here...\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </div>\n        <div>\n          Name:\n          < input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"What do we call you?\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n        </div>\n        <input type=\"submit\" value=\"create user\"/>\n      </form>\n    </div>\n  )\n}\n\nexport default Signup","import React from 'react'\nimport { useState } from 'react'\nimport { attemptToAuthenticateUser } from '../../reducers/user/userReducer'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    attemptToAuthenticateUser: (username, password) => dispatch(attemptToAuthenticateUser(username, password))\n  }\n}\n\nconst Login = ({ attemptToAuthenticateUser }) => {\n  // component state is kept in sync using the custom hook \"useField\"\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const handleLoginSubmit = (e) => {\n    e.preventDefault()\n    attemptToAuthenticateUser(username, password)\n  }\n  return(\n    <div className=\"login form\">\n      <h3>Log in to Application</h3>\n      <form onSubmit={handleLoginSubmit}>\n        <div>\n          Username:\n          <input\n            type='text'\n            value={username}\n            onChange={e => setUsername(e.target.value)}\n          />\n        </div>\n        <div>\n          Password:\n          <input\n            type='password'\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n          />\n        </div>\n        <button type=\"submit\">login</button>\n        <Link to=\"/signup\">Sign up here</Link>\n      </form>\n    </div>\n  )\n}\n\nexport default connect(null, mapDispatchToProps)(Login)","import axios from 'axios'\n\nlet token = null\nlet config = {}\nlet baseUrl = '/api'\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n  config = {\n    headers: { Authorization: token }\n  }\n}\n\n\nconst createBlog = ({ title, author, url }) => {\n  if (token) {\n    const payload = {\n      title,\n      author,\n      url,\n      likes: 0,\n      token\n    }\n    axios\n      .post(`${baseUrl}/blogs`, payload, config)\n      .catch(err => console.log(err))\n  }\n}\n\nconst updateLikes = async (blogId, numberOfLikes) => {\n  if(token) {\n    try {\n      const payload = {\n        token,\n        likes: numberOfLikes\n      }\n      await axios.put(`${baseUrl}/blogs/${blogId}`, payload, config)\n    }\n    catch (e) {\n      console.log(e)\n    }\n  }\n}\n\nconst deleteBlog = async (blogId) => {\n  if (token) {\n    try {\n      await axios.delete(`${baseUrl}/blogs/${blogId}`, config)\n    } catch (e) {\n      console.log(e)\n    }\n  }\n}\n\nexport default {\n  createBlog,\n  setToken,\n  updateLikes,\n  deleteBlog\n}\n","import { useState } from 'react'\n\nconst useField = (type) => {\n    const [ value, setValue ] = useState('')\n    const onChange = (event) => {\n        setValue(event.target.value)\n    }\n    const clear = () => {\n        setValue('')\n    }\n    return {\n        type,\n        value,\n        onChange,\n        clear\n    }\n}\n\nexport default useField","export const SHOW_NOTIFICATION = 'SHOW_NOTIFICATION'\nexport const HIDE_NOTIFICATION = 'HIDE_NOTIFICATION'\n\nexport const showNotification = (text) => {\n    return {\n        type: SHOW_NOTIFICATION,\n        text\n    }\n}\n\nexport const hideNotification = () => {\n    return {\n        type: HIDE_NOTIFICATION\n    }\n}\n\nconst initialState = {\n    isVisible: false,\n    text: ''\n}\n\nconst notificationReducer = (state=initialState, action) => {\n    switch (action.type) {\n        case SHOW_NOTIFICATION:\n            return {\n                isVisible: true,\n                text: action.text\n            }\n        case HIDE_NOTIFICATION:\n            return {\n                isVisible: false,\n                text: ''\n            }\n        default:\n            return state\n    }\n}\n\nexport default notificationReducer","import React, { useState } from 'react'\nimport BlogServices from '../../services/BlogServices'\nimport PropTypes from 'prop-types'\nimport useField from '../../hooks/useField'\nimport { showNotification, hideNotification } from '../../reducers/notification/notificationReducer'\nimport { connect } from 'react-redux'\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    showNotification: text => dispatch(showNotification(text)),\n    hideNotification: () => dispatch(hideNotification())\n  }\n}\n\nconst CreateBlog = ({ user, showNotification, hideNotification }) => {\n  const title = useField('text')\n  const author = useField('text')\n  const url = useField('text')\n  const [formIsVisible, setFormIsVisible] = useState(false)\n\n  const handleCreateBlog = (e) => {\n    e.preventDefault()\n    // set user token for authentication\n    BlogServices.setToken(user.token)\n\n    // send a post request to /api/blogs to create a new blog\n    BlogServices.createBlog({\n      title: e.target.elements.title.value,\n      url: e.target.elements.url.value,\n      author: e.target.elements.author.value\n    })\n\n    // clear input fields\n    title.clear()\n    author.clear()\n    url.clear()\n\n    // show notification\n    showNotification('this is a notification')\n    setTimeout(() => hideNotification(), 2000)\n  }\n\n  if (formIsVisible) {\n    return (\n      <div>\n        <form onSubmit={handleCreateBlog}>\n          <div>\n                        Title:\n            <input\n              type={title.type}\n              name=\"title\"\n              value={title.value}\n              onChange={title.onChange}\n            />\n          </div>\n          <div>\n                        Author:\n            <input\n              type={author.type}\n              name=\"author\"\n              value={author.value}\n              onChange={author.onChange}\n            />\n          </div>\n          <div>\n                        URL:\n            <input\n              type={url.type}\n              name=\"url\"\n              value={url.value}\n              onChange={url.onChange}\n            />\n          </div>\n          <button type=\"submit\"> Create Blog </button>\n        </form>\n      </div>\n    )\n  } else {\n    return (\n      <button onClick={() => setFormIsVisible(true)}> New Blog </button>\n    )\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(CreateBlog)\n\nCreateBlog.propTypes = {\n  user: PropTypes.object.isRequired\n}","import React, { useState } from 'react'\nimport './blog.css'\nimport BlogServices from '../../services/BlogServices'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\n\nconst Blog = ({ user, blog }) => {\n  const [ isFullBlogVisible, setIsFullBlogVisible ] = useState(false)\n  const [ likes, setLikes ] = useState(blog.likes)\n\n  const handleLikePress = (e) => {\n    e.stopPropagation()\n    setLikes(likes + 1)\n    BlogServices.setToken(user.token)\n    BlogServices.updateLikes(blog.id, likes)\n  }\n\n  const handleBlogDeletion = (e) => {\n    e.stopPropagation()\n    if (window.confirm(`remove ${blog.title} by ${blog.author}`)) {\n      BlogServices.setToken(user.token)\n      BlogServices.deleteBlog(blog.id)\n    }\n  }\n\n  if(!isFullBlogVisible) {\n    return(\n      <div className=\"blog\" data-testid=\"full-blog-hidden\" onClick={() => setIsFullBlogVisible(true)}>\n        <p>{blog.title} written by {blog.author}</p>\n      </div>\n    )\n  }\n\n  else {\n    return (\n        <div key={blog.id} className=\"blog\" data-testid=\"full-blog-shown\" onClick={() => setIsFullBlogVisible(false)}>\n          <h3><Link to={`/blogs/${blog.id}`}>{blog.title}</Link></h3>\n          <p>Created by {blog.author}</p>\n          <p>Link to full blog article: {blog.url}</p>\n          <p>Number of likes: {likes} <button onClick={handleLikePress}>like</button></p>\n          <button onClick={handleBlogDeletion}>Delete Blog</button>\n        </div>\n    )\n  }\n}\n\nexport default Blog\n\nBlog.propTypes = {\n  user: PropTypes.object.isRequired || null,\n  blog: PropTypes.object.isRequired\n}","import axios from 'axios'\n\n/*\n    user [Object] has shape: {username: String, token: String, id: String}\n*/\n\nlet token = null\nlet config = {}\n\nconst setToken = token => {\n    token = `bearer ${token}`\n    config = {\n        headers: { Authorization: token }\n    }\n}\n\n\nconst useResource = ( BASE_URL ) => {\n    /* CUSTOM hook:\n        1. Use url in arguement to 'build' an endpoint made of BASE_URL + id (for update, delete)\n        2. Create 4 functions:\n            a. getAllResources\n            b. createResource\n            c. updateResource\n            d. deleteResource\n    */\n    const getAll = async () => {\n        try {\n            const res = await axios.get(`${BASE_URL}`)\n            return res.data\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    const deleteResource = async (userToken, resourceId) => {\n        console.log(userToken)\n        setToken(userToken)\n        if (token) {\n            try {\n                await axios.delete(`${BASE_URL}/${resourceId}`, config)\n            } catch(e) {\n                console.log(e)\n            }\n        }\n    }\n\n\n    const resourceService = {\n        getAll,\n        deleteResource\n    }\n\n    return resourceService\n}\n\nexport default useResource","const initialState = []\nconst SET_BLOGS = 'SET_BLOGS'\n\n// Action Creators\nexport const setBlogs = (blogs) => {\n    return {\n        type: SET_BLOGS,\n        blogs\n    }\n}\n\n// Reducer\nconst blogsReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case SET_BLOGS:\n            return action.blogs\n        default:\n            return state\n    }\n}\n\nexport default blogsReducer","import React from 'react'\nimport { Message } from 'semantic-ui-react'\n\nconst Notification = ({ text }) => {\n  text=''\n  return(\n    <Message positive>\n      <Message.Header>The operation was successful</Message.Header>\n      <p>You have added a blog to the database. Refresh the page to see the blog. {text}</p>\n    </Message>\n  )\n}\n\nexport default Notification","import React from 'react'\nimport { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport CreateBlog from '../../CreateBlogForm/CreateBlog'\nimport Blog from '../../Blog/Blog'\nimport useResource from './../../../hooks/useResource'\nimport { connect } from 'react-redux'\nimport { setBlogs } from '../../../reducers/blogs/blogsReducer'\nimport Notification from '../../Notification/Notification'\nimport { logoutUser } from './../../../reducers/user/userReducer'\n\nconst mapStateToProps = (state) => {\n  return {\n    blogs: state.blogs,\n    notification: state.notification,\n    user: state.user\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setBlogs: blogs => dispatch(setBlogs(blogs)),\n    logoutUser: () => dispatch(logoutUser())\n  }\n}\n\nconst FrontPage = ({ user, blogs, notification, setBlogs, logoutUser }) => {\n  const [ isLoading, setIsLoading ] = useState(true)\n  const blogService = useResource('http://localhost:5000/api/blogs')\n\n  useEffect(() => {\n    const fetchBlogs = async () => {\n      const allBlogs = await blogService.getAll()\n      setBlogs(allBlogs)\n      setIsLoading(false)\n    }\n    fetchBlogs()\n  }, [ setBlogs ])\n\n  const handleUserLogout = () => {\n    // clear user data from local storage\n    window.localStorage.clear()\n    // clear user data from redux store\n    logoutUser()\n  }\n\n  if (isLoading) {\n    return <p>Please wait a moment</p>\n  }\n\n  else {\n    return (\n      <div>\n        <h1>Welcome, to my Blog Application</h1>\n        <h3>{user.username} just logged in.</h3>\n        <button onClick={handleUserLogout}>Log out</button>\n        {notification.isVisible ? <Notification text={notification.text} /> : null}\n        < CreateBlog user={user} />\n        {blogs\n          .sort((blogA, blogB) => (blogB.likes - blogA.likes))\n          .map(blog =>\n            < Blog\n              user={user}\n              blog={blog}\n              key={blog.id}\n            />\n          )\n        }\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FrontPage)","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { userService } from './../../../services/UserService'\nimport { logoutUser } from './../../../reducers/user/userReducer'\nimport { Link } from 'react-router-dom'\n\nconst mapStateToProps = (state) => {\n    return {\n        username: state.user.username\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        logoutUser: () => dispatch(logoutUser())\n    }\n}\n\nconst UsersPage = ({ username, logoutUser }) => {\n    const [ users, setUsers ] = useState([])\n    const [ redirect, setRedirect ] = useState(false)\n    useEffect(() => {\n        const fetchUsers = async () => {\n            const usersFetched = await userService.fetchAllUsers()\n            setUsers(usersFetched)\n        }\n        fetchUsers()\n    }, [])\n\n    const handleLogout = () => {\n        // remove user from local storage\n        userService.logout()\n        // remove user from redux store\n        logoutUser()\n        //redirect to home page\n        setRedirect(true)\n    }\n    if (redirect) {\n        return <Redirect to=\"/login\" />\n    } else {\n        return(\n            <div>\n                <h1>blogs</h1>\n                <p>{username} is currently logged in</p>\n                <button onClick={handleLogout}>logout</button>\n                <h1>Users</h1>\n                <table>\n                    <tbody>\n                        <tr>\n                            <th>Name</th>\n                            <th>Username</th>\n                            <th>Number of Blogs</th>\n                        </tr>\n                        {users.map(user =>\n                            <tr key={user.username}>\n                                <td><Link to={`/users/${user.id}`}>{user.name}</Link></td>\n                                <td>{user.username}</td>\n                                <td>{user.blogs.length}</td>\n                            </tr>\n                        )}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersPage)","import React, { useEffect, useState } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { userService } from './../../../services/UserService'\nimport { logoutUser } from './../../../reducers/user/userReducer'\nimport uuid from 'uuid'\n\nconst mapStateToProps = state => {\n    return {\n        userCurrentlyLoggedIn: state.user\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        logoutUser: () => dispatch(logoutUser())\n    }\n}\n\nconst UserPage = ({ match, logoutUser, userCurrentlyLoggedIn }) => {\n    const [ user, setUser ] = useState(null)\n    const [ redirect, setRedirect ] = useState(null)\n\n    useEffect(() => {\n        const fetchUser = async() => {\n            const fetchedUser = await userService.fetchUserById(match.params.id)\n            setUser(fetchedUser)\n        }\n        fetchUser()\n    }, [match])\n\n    const handleLogout = () => {\n        // remove user from local storage\n        userService.logout()\n        // remove user from redux store\n        logoutUser()\n        //redirect to home page\n        setRedirect(true)\n    }\n\n    if (redirect) {\n        return <Redirect to=\"/login\" />\n    }\n\n    else if (user) {\n        return(\n            <div>\n                <h1>Blogs</h1>\n                <p>{userCurrentlyLoggedIn.username} logged in.</p>\n                <button onClick={handleLogout}>logout</button>\n                <h1>{user.name}</h1>\n                <h3>added blogs</h3>\n                {user.blogs.map(blog => <li key={uuid()}>{blog.title}</li>)}\n            </div>\n        )\n    } else {\n        return(\n            null\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserPage)","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { logoutUser } from './../../../reducers/user/userReducer'\nimport axios from 'axios'\nimport BlogService from './../../../services/BlogServices'\nimport Blog from '../../Blog/Blog';\nconst BASE_URL = 'http://localhost:5000/api/blogs/'\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.user\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        logoutUser: () => dispatch(logoutUser())\n    }\n}\n\nconst BlogShowPage = ({ match, user, logoutUser }) => {\n    const [ blog, setBlog ] = useState(null)\n    const blogId = match.params.id\n    useEffect(() => {\n        const findBlogById = async (id) => {\n            try {\n                const response = await axios.get(`${BASE_URL}/${id}`)\n                setBlog(response.data)\n            } catch (e) {\n                console.log(e)\n            }\n        } \n        findBlogById(blogId)\n    }, [blogId])\n\n    const handleClick = async (e) => {\n        try {\n            await BlogService.setToken(user.token)\n            await BlogService.updateLikes(blog.id, blog.likes)\n        } catch (exception) {\n            console.log(exception)\n        }\n    }\n    if (!blog) {\n        return null\n    }\n    return (\n        <div>\n            <h1>Blogs </h1>\n            <p>{user.username} logged in.</p>\n            <button onClick={logoutUser}>logout</button>\n            <h1>{blog.title}</h1>\n            <a href={`${blog.url}`}>{blog.url}</a>\n            <p>{blog.likes} likes <button onClick={handleClick}>like</button></p>\n            <p>added by {blog.author}</p>\n        </div>\n    )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BlogShowPage)","import React, {useState} from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { logoutUser } from '../../reducers/user/userReducer'\nimport { Menu, Segment } from 'semantic-ui-react'\n\nconst mapStateToProps = state => {\n    return {\n        user: state.user\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        logoutUser: () => dispatch(logoutUser())\n    }\n}\n\nconst NavigationMenu = ({ user, logoutUser }) => {\n    const [ activeItem, setActiveItem ] = useState('blogs')\n    return (\n        <Menu pointing secondary>\n            <Link to=\"/blogs\">\n                <Menu.Item name={'blogs'} active={activeItem === 'blogs'} onClick={() => setActiveItem('blogs')} />\n            </Link>\n            <Link to=\"/users\">\n                <Menu.Item name=\"users\" active={activeItem === 'users'} onClick={() => setActiveItem('users')} />\n            </Link>\n            <Menu.Item name={`${user.username} currently logged in.`} position=\"right\"/>\n            <Menu.Item name=\"logout\" position=\"right\" active={activeItem === 'logout'} onClick={logoutUser}/>\n        </Menu>\n    )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavigationMenu)","// General imports\nimport React, { useEffect } from 'react'\nimport { loginUser } from './reducers/user/userReducer'\nimport { connect } from 'react-redux'\nimport { Route, Switch } from 'react-router-dom'\n\n// components\nimport Signup from './components/Signup/Signup'\nimport Login from './components/Login/Login'\nimport FrontPage from './components/Pages/FrontPage/FrontPage'\nimport UsersPage from './components/Pages/UsersPage/UsersPage'\nimport UserPage from './components/Pages/UserPage/UserPage'\nimport BlogShowPage from './components/Pages/BlogPage/BlogShowPage'\nimport NavigationMenu from './components/NavigationMenu/NavigationMenu'\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loginUser: (username, token, id) => dispatch(loginUser(username, token, id))\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  }\n}\n\nconst getUserFromLocalStorage = () => {\n  const username = window.localStorage.getItem('username') || null\n  const token = window.localStorage.getItem('token') || null\n  const id = window.localStorage.getItem('id') || null\n\n  if (username && token && id) {\n    return { username, token, id }\n  } else {\n    return null\n  }\n}\n\nconst App = ({ user, loginUser }) => {\n  useEffect(() => {\n    const authenticatedUser = getUserFromLocalStorage()\n\n    if (authenticatedUser !== null) {\n      const { username, token, id } = authenticatedUser\n      loginUser(username, token, id)\n    }\n  }, [loginUser])\n  // check if user information is already stored in the browswer\n  if (!user || user.username === null) {\n    return (\n        <div>\n          <Switch>\n            <Route exact path=\"/signup\" component={Signup} />\n            <Route path=\"/\" component={Login} />\n          </Switch>\n        </div>\n    )\n  }\n  // user in redux store\n  else {\n    return (\n        <div>\n          <NavigationMenu />\n          <Switch>\n            <Route exact path=\"/\" render={() => <FrontPage user={user} /> } />\n            <Route exact path=\"/blogs\" render={() => <FrontPage user={user} /> } />\n            <Route exact path=\"/users\" component={ UsersPage } />\n            <Route path=\"/users/:id\" component={ UserPage } />\n            <Route path=\"/blogs/:id\" component={ BlogShowPage } />\n          </Switch>\n        </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","import { combineReducers } from 'redux'\nimport userReducer from './user/userReducer'\nimport blogsReducer from './blogs/blogsReducer'\nimport notificationReducer from './notification/notificationReducer'\n\nconst rootReducer = combineReducers({\n    user: userReducer,\n    blogs: blogsReducer,\n    notification: notificationReducer\n})\n\nexport default rootReducer","import { createStore, applyMiddleware } from 'redux'\nimport rootReducer from './reducers'\nimport thunk from 'redux-thunk'\nimport logger from 'redux-logger'\n\nconst middleware = applyMiddleware(thunk, logger)\n\nconst store = createStore(rootReducer, middleware)\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n        <Provider store={store}>\n            <Router>\n                <App />\n            </Router>\n        </Provider>,\ndocument.getElementById('root'))\n"],"sourceRoot":""}